function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

import templates from './defaultShowMoreTemplates';
var defaultShowMoreConfig = {
  templates: templates,
  limit: 100
};
export default function getShowMoreConfig(showMoreOptions) {
  if (!showMoreOptions) return null;

  if (showMoreOptions === true) {
    return defaultShowMoreConfig;
  }

  var config = _objectSpread({}, showMoreOptions);

  if (!showMoreOptions.templates) {
    config.templates = defaultShowMoreConfig.templates;
  }

  if (!showMoreOptions.limit) {
    config.limit = defaultShowMoreConfig.limit;
  }

  return config;
}